#pragma checksum "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "367708ccdd7951b5fb10ab7c0ad45f213fddfe6e"
// <auto-generated/>
#pragma warning disable 1591
namespace FrontEnd.Pages
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using System.Linq.Expressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using FrontEnd;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using FrontEnd.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using FrontEnd.Shared.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using FrontEnd.Shared.ItemSiteComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using MongoDB.Driver;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\MyProjects\Github\EcommerceSite\FrontEnd\_Imports.razor"
using FrontEnd.Shared.ProductListSite;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainPageLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/list/{Id}")]
    public partial class ProductListSite : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "product-list-site content");
            __builder.AddAttribute(2, "b-xj49gjo6ci");
            __builder.OpenComponent<FrontEnd.Shared.Components.NavTree>(3);
            __builder.AddAttribute(4, "navigatorTree", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.Generic.List<System.String>>(
#nullable restore
#line 4 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                             Category.GetTree(Id)

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(5, "\r\n    ");
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "main-component");
            __builder.AddAttribute(8, "b-xj49gjo6ci");
            __builder.OpenElement(9, "div");
            __builder.AddAttribute(10, "class", "filter");
            __builder.AddAttribute(11, "b-xj49gjo6ci");
            __builder.AddMarkupContent(12, "<p b-xj49gjo6ci>Product Filter</p>\r\n            ");
            __builder.OpenComponent<FrontEnd.Shared.ProductListSite.FilterPanel>(13);
            __builder.AddAttribute(14, "filterMenu", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.Generic.Dictionary<System.String, System.Linq.Expressions.Expression<System.Func<ProductData, System.Boolean>>>>(
#nullable restore
#line 8 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                      manufacturerSet

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(15, "Name", "Manufacturer");
            __builder.AddAttribute(16, "ClickCallback", new System.Action<System.Linq.Expressions.Expression<System.Func<ProductData, System.Boolean>>>(
#nullable restore
#line 8 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                                                                           filterAction

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(17, "\r\n            ");
            __builder.OpenComponent<FrontEnd.Shared.ProductListSite.FilterPanel>(18);
            __builder.AddAttribute(19, "filterMenu", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.Generic.Dictionary<System.String, System.Linq.Expressions.Expression<System.Func<ProductData, System.Boolean>>>>(
#nullable restore
#line 9 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                      priceSet

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(20, "Name", "Price");
            __builder.AddAttribute(21, "ClickCallback", new System.Action<System.Linq.Expressions.Expression<System.Func<ProductData, System.Boolean>>>(
#nullable restore
#line 9 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                                                             filterAction

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.CloseElement();
            __builder.AddMarkupContent(22, "\r\n\r\n        ");
            __builder.OpenElement(23, "div");
            __builder.AddAttribute(24, "class", "item-list");
            __builder.AddAttribute(25, "b-xj49gjo6ci");
            __builder.OpenElement(26, "div");
            __builder.AddAttribute(27, "class", "item-grid");
            __builder.AddAttribute(28, "b-xj49gjo6ci");
#nullable restore
#line 14 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                 foreach (var i in itemDatas)
                {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<FrontEnd.Shared.Components.ProductBtn>(29);
            __builder.AddAttribute(30, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<ProductData>(
#nullable restore
#line 16 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                       i

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(31, "CustomStyle", "width:100%");
            __builder.CloseComponent();
#nullable restore
#line 17 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(32, "\r\n            ");
            __builder.OpenElement(33, "div");
            __builder.AddAttribute(34, "class", "page-counter");
            __builder.AddAttribute(35, "b-xj49gjo6ci");
#nullable restore
#line 20 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                 for (var i = 1; i <= allPage; i++)
                {
                    string cls = i == currentPage ? "current" : "";
                    int tmp = i;

#line default
#line hidden
#nullable disable
            __builder.OpenElement(36, "div");
            __builder.AddAttribute(37, "class", "num" + " " + (
#nullable restore
#line 24 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                     cls

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(38, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 24 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                                      () => ChangePage(tmp)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(39, "b-xj49gjo6ci");
            __builder.AddContent(40, 
#nullable restore
#line 24 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                                                                               i

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 25 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 31 "D:\MyProjects\Github\EcommerceSite\FrontEnd\Pages\ProductListSite.razor"
       
    [Parameter]
    public string Id { get; set; }
    private List<ProductData> itemDatas = new();
    private FilterDefinition<ProductData>[] filterList = {
Builders<ProductData>.Filter.Empty,
Builders<ProductData>.Filter.Empty
};
    private IMongoCollection<ProductData> collection;
    private Dictionary<string, Expression<Func<ProductData, bool>>> manufacturerSet = new();
    private Dictionary<string, Expression<Func<ProductData, bool>>> priceSet = new();
    Action<Expression<Func<ProductData, bool>>> filterAction;

    private int currentPage = 1;
    private int allPage = 0;
    private int itemsPerPage = 15;

    protected override async Task OnInitializedAsync()
    {
        var client = new MongoClient("mongodb://127.0.0.1:27017");
        var db = client.GetDatabase("EcommerceSite");
        collection = db.GetCollection<ProductData>("Items");

        filterAction = (m) =>
        {
            FilterAction(m);
        };

        manufacturerSet = await GetManufacturers();
        priceSet = await GetPrice();
        var filter = Builders<ProductData>.Filter.Eq(m => m.Type, Id);
        filterList[0] = filter;

        await QueryItems(1);
    }
    private async Task CountPages()
    {
        var count = await collection.CountDocumentsAsync(Builders<ProductData>.Filter.And(filterList));
        allPage = (int)(count / itemsPerPage + 1);
    }
    private async Task QueryItems(int page)
    {
        var operation = collection.Find(Builders<ProductData>.Filter.And(filterList));
        var count = (await operation.ToListAsync()).Count;
        allPage = (int)(count / itemsPerPage + 1);

        var result = await operation
        .Limit(itemsPerPage)
        .Skip((page - 1) * itemsPerPage)
        .ToListAsync();
        itemDatas = result;
    }
    private async void ChangePage(int page)
    {
        Console.WriteLine("page click");
        await QueryItems(page);
        currentPage = page;
        StateHasChanged();

    }
    private async Task<Dictionary<string, Expression<Func<ProductData, bool>>>> GetManufacturers()
    {
        var filter = Builders<ProductData>.Filter.Eq(m => m.Type, Id);
        var list = await collection.Find(filter).ToListAsync();
        HashSet<string> manufacturerSet = new();
        Dictionary<string, Expression<Func<ProductData, bool>>> dict = new Dictionary<string, Expression<Func<ProductData,
        bool>>>();

        foreach (var i in list)
        {
            if (!dict.ContainsKey(i.Manufacturer)) dict.Add(i.Manufacturer, (p) => p.Manufacturer == i.Manufacturer);
            manufacturerSet.Add(i.Manufacturer);
        }
        Console.WriteLine(dict["ViewSonic"]);
        return dict;
    }
    private async Task<Dictionary<string, Expression<Func<ProductData, bool>>>> GetPrice()
    {
        var filter = Builders<ProductData>.Filter.Eq(m => m.Type, Id);
        var list = await collection.Find(filter).ToListAsync();
        HashSet<string> res = new();
        Dictionary<string, Expression<Func<ProductData, bool>>> dict = new Dictionary<string, Expression<Func<ProductData,
        bool>>>();
        foreach (var i in list)
        {
            var price = i.Price;
            if (price <= 1000000 && !dict.ContainsKey("<= 1m"))
            {
                dict.Add("<= 1m", m => m.Price <= 1000000);
            }
            if (price > 1000000 && price <= 3000000 && !dict.ContainsKey("1m - 3m"))
            {
                dict.Add("1m - 3m", m => m.Price > 1000000 && m.Price <= 3000000);
            }
            if (price > 3000000 && price <= 7000000 && !dict.ContainsKey("3m - 7m"))
            {
                dict.Add("3m - 7m", m => m.Price > 3000000 && m.Price <= 7000000);
            }
            if (price > 7000000 && !dict.ContainsKey("<= 7m>"))
            {
                dict.Add("> 7m", m => m.Price > 7000000);
            }

        }
        return dict;
    }
    private async void FilterAction(Expression<Func<ProductData, bool>> m)
    {
        var filter = Builders<ProductData>.Filter.Where(m);
        filterList[1] = filter;
        await QueryItems(currentPage);
        Console.WriteLine("clicked");
        StateHasChanged();
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
